diff a/man/polyreg.Rd b/man/polyreg.Rd	(rejected hunks)
@@ -1,124 +1,144 @@
 % Generated by roxygen2: do not edit by hand
 % Please edit documentation in R/polyreg.R
 \name{polyreg}
 \alias{polyreg}
 \title{Direct polynomial regression for competing risks, survival and binomial analysis}
 \usage{
 polyreg(
   nuisance.model,
   exposure,
   strata = NULL,
   data,
   subset.condition = NULL,
   na.action = na.omit,
   code.event1 = 1,
   code.event2 = 2,
   code.censoring = 0,
   code.exposure.ref = 0,
   effect.measure1 = "RR",
   effect.measure2 = "RR",
   time.point = NULL,
-  outcome.type = "COMPETINGRISK",
+  outcome.type = "COMPETING-RISK",
   conf.level = 0.95,
   report.nuisance.parameter = FALSE,
   report.optim.convergence = FALSE,
-  report.boot.conf = FALSE,
+  report.boot.conf = NULL,
   boot.bca = TRUE,
   boot.parameter1 = 200,
   boot.parameter2 = 46,
-  outer.optim.method = "nleqslv",
-  inner.optim.method = "optim",
-  optim.parameter1 = 1e-05,
-  optim.parameter2 = 20,
+  nleqslv.method = "nleqslv",
+  optim.parameter1 = 1e-06,
+  optim.parameter2 = 1e-06,
   optim.parameter3 = 100,
-  optim.parameter4 = 1e-05,
-  optim.parameter5 = 200,
-  optim.parameter6 = 1e-10,
-  optim.parameter7 = 200,
+  optim.parameter4 = 50,
+  optim.parameter5 = 50,
+  optim.parameter6 = 50,
+  optim.parameter7 = 1e-10,
+  optim.parameter8 = 1e-06,
+  optim.parameter9 = 1e-06,
+  optim.parameter10 = 40,
+  optim.parameter11 = 0.025,
+  optim.parameter12 = 2,
+  optim.parameter13 = 0.5,
   data.initial.values = NULL,
   should.normalize.covariate = TRUE,
-  should.sort.data = TRUE,
   prob.bound = 1e-05
 )
 }
 \arguments{
-\item{nuisance.model}{formula Model formula representing outcome and covariates other than exposure}
+\item{nuisance.model}{A \code{\link[stats]{formula}} describing the outcome and nuisance covariates, excluding the exposure of interest.}
 
-\item{exposure}{character Column name representing the binary exposure variable.}
+\item{exposure}{A character string giving the name of the binary exposure variable in \code{data}.}
 
-\item{strata}{character Column name representing the stratification variable for adjustment for dependent censoring. Defaults to NULL.}
+\item{strata}{Optional character string with the name of the stratification variable used to adjust for dependent censoring. Defaults to \code{NULL}.}
 
-\item{data}{data.frame Input dataset containing the outcome, the exposure and covariates.}
+\item{data}{A data frame containing the outcome, exposure and nuisance covariates referenced by \code{nuisance.model}.}
 
-\item{subset.condition}{character Specifies a condition for subsetting the data. Defaults to NULL.}
+\item{subset.condition}{Optional expression (as a character string) defining a subset of \code{data} to analyse. Defaults to \code{NULL}.}
 
-\item{na.action}{character Specifies a missing-data filter function, applied to the model frame, after any subset argument has been used. Defaults to na.omit.}
+\item{na.action}{A function specifying the action to take on missing values. The default is \code{\link[stats]{na.omit}}.}
 
-\item{code.event1}{integer Specifies the code of event 1. Defaults to 1.}
+\item{code.event1}{Integer code corresponding to the first event of interest. Defaults to \code{1}.}
 
-\item{code.event2}{integer Specifies the code of event 2. Defaults to 2.}
+\item{code.event2}{Integer code corresponding to the competing event. Defaults to \code{2}.}
 
-\item{code.censoring}{integer Specifies the code of censoring. Defaults to 0.}
+\item{code.censoring}{Integer code representing censoring. Defaults to \code{0}.}
 
-\item{code.exposure.ref}{integer Specifies the code of the reference category of exposure. Defaults to 0.}
+\item{code.exposure.ref}{Integer code identifying the reference exposure category. Defaults to \code{0}.}
 
-\item{effect.measure1}{character Specifies the effect measure for event (RR, OR, SHR).}
+\item{effect.measure1}{Character string specifying the effect measure for the primary event. Supported values are \code{"RR"}, \code{"OR"} and \code{"SHR"}.}
 
-\item{effect.measure2}{character Specifies the effect measure for competing risk (RR, OR, SHR).}
+\item{effect.measure2}{Character string specifying the effect measure for the competing event. Supported values are \code{"RR"}, \code{"OR"} and \code{"SHR"}.}
 
-\item{time.point}{numeric The time point for exposure effects to be estimated.}
+\item{time.point}{Numeric time point at which the exposure effect is evaluated. Required for survival and competing risk analyses.}
 
-\item{outcome.type}{character Specifies the type of outcome (COMPETINGRISK, SURVIVAL, BINOMIAL and PROPORTIONAL).}
+\item{outcome.type}{Character string selecting the outcome type. Valid values are \code{"COMPETING-RISK"}, \code{"SURVIVAL"}, \code{"BINOMIAL"}, \code{"PROPORTIONAL"} and \code{"POLY-PROPORTIONAL"}. Defaults to \code{"COMPETING-RISK"}.}
 
-\item{conf.level}{numeric The level for confidence intervals.}
+\item{conf.level}{Confidence level for Wald-type intervals. Defaults to \code{0.95}.}
 
-\item{report.nuisance.parameter}{logical Specifies contents of return. (TRUE = report estimates of nuisance parameters, FALSE = otherwise). Defaults to FALSE.}
+\item{report.nuisance.parameter}{Logical; if \code{TRUE}, the returned object includes estimates of the nuisance model parameters. Defaults to \code{FALSE}.}
 
-\item{report.optim.convergence}{logical Specifies contents of return. (TRUE = report indicators of convergence of parameter estimation, FALSE = otherwise). Defaults to FALSE.}
+\item{report.optim.convergence}{Logical; if \code{TRUE}, optimisation convergence summaries are returned. Defaults to \code{FALSE}.}
 
-\item{report.boot.conf}{logical Specifies contents of return. (TRUE = report bootstrap confidence intervals, FALSE = otherwise). Defaults to FALSE.}
+\item{report.boot.conf}{Logical or \code{NULL}. When \code{TRUE}, bootstrap confidence intervals are computed. When \code{FALSE}, they are omitted. If \code{NULL}, the function chooses based on \code{outcome.type}.}
 
-\item{boot.bca}{logical Specifies the method of bootstrap confidence intervals (TRUE = BCA method, FALSE = normal approximation).}
+\item{boot.bca}{Logical indicating the bootstrap confidence interval method. Use \code{TRUE} for bias-corrected and accelerated intervals or \code{FALSE} for the normal approximation.}
 
-\item{boot.parameter1}{integer Number of replications for bootstrap confidence intervals.}
+\item{boot.parameter1}{Integer giving the number of bootstrap replications. Defaults to \code{200}.}
 
-\item{boot.parameter2}{numeric Seed used for bootstrap confidence intervals.}
+\item{boot.parameter2}{Optional numeric seed used when resampling during bootstrap inference.}
 
-\item{outer.optim.method}{character Specifies the method of optimization (nleqslv, Broyden, Newton, optim, BFGS, SANN).}
+\item{nleqslv.method}{Character string defining the solver used by \code{\link[nleqslv]{nleqslv}}. Available choices include \code{"nleqslv"}, \code{"Broyden"}, \code{"Newton"}, \code{"optim"}, \code{"BFGS"} and \code{"SANN"}.}
 
-\item{inner.optim.method}{character Specifies the method of optimization (optim, BFGS, SANN).}
+\item{optim.parameter1}{Numeric tolerance for convergence of the outer loop. Defaults to \code{1e-6}.}
 
-\item{optim.parameter1}{numeric A threshold for initial value search in outer loop. Defaults to 1e-5.}
+\item{optim.parameter2}{Numeric tolerance for convergence of the inner loop. Defaults to \code{1e-6}.}
 
-\item{optim.parameter2}{integer Maximum number of iterations. Defaults to 20.}
+\item{optim.parameter3}{Numeric constraint on the absolute value of parameters. Defaults to \code{100}.}
 
-\item{optim.parameter3}{numeric Constraint range for parameters. Defaults to 100.}
+\item{optim.parameter4}{Integer maximum number of outer loop iterations. Defaults to \code{50}.}
 
-\item{optim.parameter4}{numeric A threshold for determining convergence in outer loop. Defaults to 1e-5.}
+\item{optim.parameter5}{Integer maximum number of \code{nleqslv} iterations per outer iteration. Defaults to \code{50}.}
 
-\item{optim.parameter5}{integer Maximum number of iterations for nleqslv/optim in outer loop. Defaults to 200.}
+\item{optim.parameter6}{Integer maximum number of iterations for the Levenberg-Marquardt routine. Defaults to \code{50}.}
 
-\item{optim.parameter6}{numeric A threshold for determining convergence in inner loop. Defaults to 1e-10.}
+\item{optim.parameter7}{Numeric convergence tolerance for the Levenberg-Marquardt routine. Defaults to \code{1e-10}.}
 
-\item{optim.parameter7}{integer Maximum number of iterations for optim in inner loop. Defaults to 200.}
+\item{optim.parameter8}{Numeric tolerance for updating the Hessian in the Levenberg-Marquardt routine. Defaults to \code{1e-6}.}
 
-\item{should.normalize.covariate}{logical Indicates whether covariates are normalized (TRUE = normalize, FALSE = otherwise). Defaults to TRUE.}
+\item{optim.parameter9}{Numeric starting value for the Levenberg-Marquardt damping parameter lambda. Defaults to \code{1e-6}.}
 
-\item{should.sort.data}{logical Indicates whether data are initially sorted to reduce computation steps (TRUE = sort, FALSE = otherwise). Defaults to TRUE.}
+\item{optim.parameter10}{Numeric upper bound for lambda in the Levenberg-Marquardt routine. Defaults to \code{40}.}
 
-\item{prob.bound}{numeric A threshold for clamping probabilities. Defaults to 1e-5.}
+\item{optim.parameter11}{Numeric lower bound for lambda in the Levenberg-Marquardt routine. Defaults to \code{0.025}.}
 
-\item{data.initlal.values}{data.frame A dataset containing initial values. Defaults to NULL.}
+\item{optim.parameter12}{Numeric multiplicative increment applied to lambda when the Levenberg-Marquardt step is successful. Defaults to \code{2}.}
+
+\item{optim.parameter13}{Numeric multiplicative decrement applied to lambda when the Levenberg-Marquardt step is unsuccessful. Defaults to \code{0.5}.}
+
+\item{data.initial.values}{Optional data frame providing starting values for the optimisation. Defaults to \code{NULL}.}
+
+\item{should.normalize.covariate}{Logical indicating whether covariates should be centred and scaled prior to optimisation. Defaults to \code{TRUE}.}
+
+\item{prob.bound}{Numeric lower bound used to truncate probabilities away from 0 and 1. Defaults to \code{1e-5}.}
 }
 \value{
-A list of results from direct polynomial regression. coefficient and cov are estimated regression coefficients of exposure and covariates and their variance covariance matrix. summary meets requirement of msummary function. diagnosis.statistics in includes inverse probability weights, influence functions, and predicted potential outcomes
+A list containing fitted exposure effects and supporting results. The main components include \code{coefficient} (estimated exposure and covariate effects), \code{cov} (their variance-covariance matrix), \code{summary} (a tidy summary table compatible with \code{\link[modelsummary]{msummary}}) and \code{diagnosis.statistics} (inverse probability weights, influence functions and predicted potential outcomes).
 }
 \description{
-Direct polynomial regression for competing risks, survival and binomial analysis
+Fits the direct polynomial regression model for a binary exposure under several outcome types, including competing risks, survival and binomial endpoints.
 }
 \examples{
 data(diabetes.complications)
-output <- polyreg(nuisance.model = Event(t,epsilon)~+1, exposure = 'fruitq1', data = diabetes.complications, effect.measure1='RR', effect.measure2='RR', time.point=8, outcome.type='C')
+output <- polyreg(
+  nuisance.model = Event(t, epsilon) ~ +1,
+  exposure = "fruitq1",
+  data = diabetes.complications,
+  effect.measure1 = "RR",
+  effect.measure2 = "RR",
+  time.point = 8,
+  outcome.type = "COMPETING-RISK"
+)
 library(modelsummary)
 msummary(output$summary, statistic = c("conf.int"), exponentiate = TRUE)
 }
